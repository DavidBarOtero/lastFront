{"ast":null,"code":"import _slicedToArray from \"/home/david/Escritorio/frontSinBug/NiceEventFrontFinal-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/david/Escritorio/frontSinBug/NiceEventFrontFinal-master/src/components/IndexComponents/Events/ContentEventProfesionalFinder.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport UserCard from \"./../../UserCard\";\nimport DatePicker from \"react-datepicker\";\nimport { useAuth } from \"../../Api/auth-requests\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction ContentEventProfesionalFinder() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allProfessionalsList = _useState2[0],\n        setAllProfessionalsList = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cities = _useState4[0],\n        setCities = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        serverResponse = _useState6[0],\n        setServerResponse = _useState6[1];\n\n  const _useState7 = useState(\"1\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selectedCity = _useState8[0],\n        setSelectedCity = _useState8[1];\n\n  const _useState9 = useState(\"1\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedProfession = _useState10[0],\n        setSelectedProfession = _useState10[1];\n\n  const _useState11 = useState(new Date()),\n        _useState12 = _slicedToArray(_useState11, 2),\n        datePicker = _useState12[0],\n        setDatePicker = _useState12[1];\n\n  function getAllProfessionals() {\n    axios.get(`${process.env.REACT_APP_BACKEND}/api/frontprofession`).then(res => {\n      const result = res.data;\n      setAllProfessionalsList(result); // console.log(result);\n      // console.log([res.data]);\n      // console.log(allProfessionalsList);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  useEffect(() => {\n    getAllProfessionals();\n    getCities();\n  }, []);\n\n  function getCities() {\n    axios.get(`${process.env.REACT_APP_BACKEND}/api/frontcities`).then(res => {\n      const result = res.data;\n      setCities(result); // console.log(result);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  function handleChangeProfession(e) {\n    setSelectedProfession(e.target.value);\n  }\n\n  function handleChangeCity(e) {\n    setSelectedCity(e.target.value);\n  }\n\n  function handleChangeDate(e) {\n    setDatePicker(e);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    className: \"professionalFinder\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Ciudad\"), React.createElement(\"select\", {\n    onChange: handleChangeCity,\n    value: selectedCity,\n    style: {\n      textAlignLast: \"center\",\n      minWidth: \"11.3rem\"\n    },\n    className: \"selectCity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, cities.map(props => React.createElement(\"option\", {\n    key: props.idCity,\n    value: props.idCity,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.Name)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Profesionales\"), React.createElement(\"select\", {\n    value: selectedProfession,\n    onChange: handleChangeProfession,\n    style: {\n      textAlignLast: \"center\",\n      minWidth: \"11.3rem\"\n    },\n    className: \"selectProfession\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, allProfessionalsList.map(props => React.createElement(\"option\", {\n    key: props.idProfession,\n    value: props.idProfession,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.NameProfession)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Fecha\"), React.createElement(DatePicker, {\n    selected: datePicker,\n    onChange: handleChangeDate,\n    dateFormat: \"yyyy/MM/dd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"defaultFormButtonSubmit \",\n    type: \"button\",\n    onClick: async () => {\n      try {\n        await axios.get(`${process.env.REACT_APP_BACKEND}/api/professionalfinder/${selectedProfession}/${selectedCity}/${datePicker}`).then(res => {\n          const result = res.data;\n          console.log(result);\n          setServerResponse(result);\n          console.log(serverResponse);\n          console.log(datePicker);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Buscar\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, serverResponse && serverResponse.map(props => React.createElement(UserCard, {\n    idProfessional: props.idProfessional,\n    idCity: props.idCity,\n    datePicker: datePicker,\n    key: props.idProfessional,\n    nameProfession: props.NameProfession,\n    name: props.Name,\n    LastName: props.LastName,\n    fee: props.Fee,\n    description: props.Description,\n    ratingAverage: props.RatingAverage,\n    ratingTotal: props.RatingCount,\n    email: props.Email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))));\n}\n\nexport { ContentEventProfesionalFinder }; // function SelectProfesionalForm(props) {\n//   return (\n//     <div>\n//       <div className=\"paddingSelecProfesional\">\n//         <select className=\"selectProfesionalForm\">\n//           {props.profesion.map(props => (\n//             <option key={props.idProfession} value={props.idProfession}>\n//               {props.Name}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"paddingSelecProfesional\" style={{ paddingTop: \".5rem\" }}>\n//         <select className=\"selectProfesionalForm\">\n//           {props.province.map(props => (\n//             <option key={props.idCity} value={props.idCity}>\n//               {props.Name}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"paddingSelecFee\" style={{ paddingTop: \".5rem\" }}>\n//         <input className=\"selectFee\" placeholder=\"â‚¬/hora\" />\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/david/Escritorio/frontSinBug/NiceEventFrontFinal-master/src/components/IndexComponents/Events/ContentEventProfesionalFinder.js"],"names":["React","axios","useState","useEffect","UserCard","DatePicker","useAuth","ContentEventProfesionalFinder","allProfessionalsList","setAllProfessionalsList","cities","setCities","serverResponse","setServerResponse","selectedCity","setSelectedCity","selectedProfession","setSelectedProfession","Date","datePicker","setDatePicker","getAllProfessionals","get","process","env","REACT_APP_BACKEND","then","res","result","data","catch","err","console","error","getCities","e","log","handleChangeProfession","target","value","handleChangeCity","handleChangeDate","handleSubmit","preventDefault","textAlignLast","minWidth","map","props","idCity","textAlign","Name","idProfession","NameProfession","idProfessional","LastName","Fee","Description","RatingAverage","RatingCount","Email"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport UserCard from \"./../../UserCard\";\nimport DatePicker from \"react-datepicker\";\nimport { useAuth } from \"../../Api/auth-requests\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction ContentEventProfesionalFinder() {\n  const [allProfessionalsList, setAllProfessionalsList] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [serverResponse, setServerResponse] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"1\");\n  const [selectedProfession, setSelectedProfession] = useState(\"1\");\n  const [datePicker, setDatePicker] = useState(new Date());\n\n  function getAllProfessionals() {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND}/api/frontprofession`)\n      .then(res => {\n        const result = res.data;\n        setAllProfessionalsList(result);\n        // console.log(result);\n\n        // console.log([res.data]);\n        // console.log(allProfessionalsList);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n  useEffect(() => {\n    getAllProfessionals();\n    getCities();\n  }, []);\n\n  function getCities() {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND}/api/frontcities`)\n      .then(res => {\n        const result = res.data;\n\n        setCities(result);\n        // console.log(result);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  function handleChangeProfession(e) {\n    setSelectedProfession(e.target.value);\n  }\n  function handleChangeCity(e) {\n    setSelectedCity(e.target.value);\n  }\n\n  function handleChangeDate(e) {\n    setDatePicker(e);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return (\n    <>\n      <form className=\"professionalFinder\" onSubmit={handleSubmit}>\n        <div>\n          <h4>Ciudad</h4>\n          <select\n            onChange={handleChangeCity}\n            value={selectedCity}\n            style={{ textAlignLast: \"center\", minWidth: \"11.3rem\" }}\n            className=\"selectCity\"\n          >\n            {cities.map(props => (\n              <option\n                key={props.idCity}\n                value={props.idCity}\n                style={{ textAlign: \"center\" }}\n              >\n                {props.Name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <h4>Profesionales</h4>\n          <select\n            value={selectedProfession}\n            onChange={handleChangeProfession}\n            style={{ textAlignLast: \"center\", minWidth: \"11.3rem\" }}\n            className=\"selectProfession\"\n          >\n            {allProfessionalsList.map(props => (\n              <option key={props.idProfession} value={props.idProfession}>\n                {props.NameProfession}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <h4>Fecha</h4>\n          <DatePicker\n            selected={datePicker}\n            onChange={handleChangeDate}\n            dateFormat=\"yyyy/MM/dd\"\n          />\n        </div>\n\n        <button\n          className=\"defaultFormButtonSubmit \"\n          type=\"button\"\n          onClick={async () => {\n            try {\n              await axios\n                .get(\n                  `${process.env.REACT_APP_BACKEND}/api/professionalfinder/${selectedProfession}/${selectedCity}/${datePicker}`\n                )\n                .then(res => {\n                  const result = res.data;\n                  console.log(result);\n                  setServerResponse(result);\n                  console.log(serverResponse);\n                  console.log(datePicker);\n                });\n            } catch (error) {\n              console.error(error);\n            }\n          }}\n        >\n          Buscar\n        </button>\n      </form>\n      <div>\n        {serverResponse &&\n          serverResponse.map(props => (\n            <UserCard\n              idProfessional={props.idProfessional}\n              idCity={props.idCity}\n              datePicker={datePicker}\n              key={props.idProfessional}\n              nameProfession={props.NameProfession}\n              name={props.Name}\n              LastName={props.LastName}\n              fee={props.Fee}\n              description={props.Description}\n              ratingAverage={props.RatingAverage}\n              ratingTotal={props.RatingCount}\n              email={props.Email}\n            />\n          ))}\n      </div>\n    </>\n  );\n}\nexport { ContentEventProfesionalFinder };\n\n// function SelectProfesionalForm(props) {\n//   return (\n//     <div>\n//       <div className=\"paddingSelecProfesional\">\n//         <select className=\"selectProfesionalForm\">\n//           {props.profesion.map(props => (\n//             <option key={props.idProfession} value={props.idProfession}>\n//               {props.Name}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"paddingSelecProfesional\" style={{ paddingTop: \".5rem\" }}>\n//         <select className=\"selectProfesionalForm\">\n//           {props.province.map(props => (\n//             <option key={props.idCity} value={props.idCity}>\n//               {props.Name}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"paddingSelecFee\" style={{ paddingTop: \".5rem\" }}>\n//         <input className=\"selectFee\" placeholder=\"â‚¬/hora\" />\n//       </div>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}